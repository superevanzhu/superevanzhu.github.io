<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[指南针－架构师必备技能图谱]]></title>
      <url>%2F2017%2F02%2F24%2F35934%2F</url>
      <content type="text"><![CDATA[我理想中的架构师，应该具备的技能，用一张图来描述 从底层开始，一层一层往上走 第一层 language：语言是工程师手中的原材料，是创造事物、实现思想的基本粒子。 algorithm &amp; data-structure：算法和数据结构。任何系统都可以抽象成为“数据＋数据的操作”。算法和数据结构要探讨的就是：如何用数据描述事物、如何高效的操作数据。 framework：框架的作用体现在工程效率上面。主要有两个：一，用来提升工程效率，因为不需要从零开始。二，整合整个团队的力量，因为制定了一些规则和约束，使得团队中不同水平的成员都可以较好的填充代码。 operation system。工程师不能操纵实际，操作的是机器。应用系统的代码归根结底是调用操作系统的接口。操作系统本身则是调用机器指令集。 database。现代的应用系统，基本上没有能离开数据库的。现代大型的系统，相当大的精力实在和“数据高效存储访问”做斗争。 network。网络的意义在于，可以无限的聚合单个微小力量。这是天然的优势。 第二层 distributed architecture：分布式架构。 distributed component：分布式组件。 第三层 common logic system：一般逻辑系统。 special logi system：特殊逻辑系统。 参考https://superevanzhu.github.io/2017/02/24/%E6%9E%B6%E6%9E%84%E5%B8%88%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[愉快的写作－markdown语法参考]]></title>
      <url>%2F2017%2F02%2F23%2F46161%2F</url>
      <content type="text"><![CDATA[markdown语法入门markdown标记法，就是用普通的文本，添加上少许的标记，显示出还算好看的效果。用它来写作，在也不需要word这种大块头软件，小小的文本编辑器就可以开始了。 下面介绍markdown一些常用标记的用法 标题在文字前面加上1~6个#号。可以表现出标题的效果。1个#是最大的标题，6个#是最小的标题。注意，#和文字之间要空一个空格，其他的标记一般都是这样。 # 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 ####### 六级标题 无序列表文字前面加上-&lt;空格&gt;或者+&lt;空格&gt;或者*&lt;空格&gt;，可以表现出列表的效果： 例子： - 文本1 - 文本2 等同于： * 文本1 * 文本2 也等同于： + 文本1 + 文本2 有序列表文字前面加上&lt;数字&gt;.&lt;空格&gt;，可以表现出带序号的列表。从1开始显示，1，2，3，…这样的。 1. 列表项 2. 列表项 3. 列表项 注意，有序列表中的数字的大小是无关的 1. 列表项 1. 列表项 1. 列表项 所以，像上面的写法，都是1，输出的也是按照1,2,3…顺序输出的。 文字的样式文字本身的样式，斜体，加粗，删除线，行内引用。 *斜体* **加粗** ~~删除线~~ `行内引用` 效果如下：斜体加粗删除线行内引用 引用文字格式： &gt; 一段的文字，可以产生类似与于邮件中，引用一段文字的效果。 我是一段文字哦 注意，引用的文字，用一个空白行结束。 另一种文字引用格式：一段文字前面加上4个空格可以产生一大块突出显示的文字。 我是一段文字哦 代码块想写一段代码块，可以用一对三个连续的反引号： \12345var comName = &apos;ngmm&apos;; //我是代码块\ 或者，不用三个反引号，而是将一段代码，整体缩进一个制表符，也能实现相同效果。 行内代码如果代码是不块，而是在一行内。用一对反引号括起来。 `我说行内代码` 水平分割线用三个以上的*或-或_占用一行，可以产生一条水平分隔线。例如： *** --- ___ 可点击链接格式：[链接的文字](链接的网址)，可以产生一个可点击的链接。例如： 必应 另一种链接链接也可以分成两部分：先定义链接、再使用链接格式：定义一个链接：[链接的ID]: 链接的网址 &quot;链接的文字&quot; 随后，可以在别的地方使用它：[链接的文字][链接的ID] 插入图片链接markdown本身是文本，所以不支持粘贴图片的。但是我们可以粘贴图片的链接，从而显示图片（图片本身是存在别的地方的）。 格式：![图片的alt文字](图片的网址) 反斜杠转义前面说到，markdown中*,+,-等符号是有特定意义的。那么，如果我想在文本中显示*,+,-本身呢？可以在特殊符号前面加上\。例如 \* -&gt; 输出*\+ -&gt; 输出+\- -&gt; 输出- 更多的特殊符号： \ 反斜线 ` 反引号 * 星号 _ 底线 {} 花括号 [] 方括号 () 括弧 # 井字号 + 加号 - 减号 . 英文句点 ! 惊叹号 更多非标准语法markdown还有更多的语法，比如表格之类的，不过只有少部分编辑器才能正确显示。这就意味着，如果真的想用他们的，得花点时间寻找一个支持更多Markdown语法的编辑器 表格12345| Tables | Are | Cool || ------------- |:-------------:| -----:|| col 3 is | right-aligned | $1600 || col 2 is | centered | $12 || zebra stripes | are neat | $1 | Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1 设置列的对齐方式：左对齐、居中、右对齐 默认左对齐1------ 右对齐1-----: 居中对齐1:----: Markdown编辑器Windows 平台 MarkdownPad 2 MarkPadLinux 平台 ReTextMac 平台 Mou在线编辑器 Markable.in Dillinger.io浏览器插件 MaDe (Chrome) 参考资料 Markdown 语法说明]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[计算机编译技术三大圣经]]></title>
      <url>%2F2017%2F02%2F23%2F7878%2F</url>
      <content type="text"><![CDATA[计算机编译技术三大圣经 1.龙书(Dragon book)书名是Compilers: Principles,Techniques,and Tools作者是：Alfred V.Aho,Ravi Sethi,Jeffrey D.Ullman国内所有的编译原理教材都是抄的它的，而且只是抄了最简单的前端的一些内容。 2.鲸书(Whale book)书名是：Advanced Compiler Design and Implementation作者是：Steven S.Muchnick也就是高级编译原理，象什么陈疑云之类的估计也就是这个水平不错了 3.虎书(Tiger book)书名是：Modern Compiler Implementation in Java/C++/ML,Second Edition作者是：Andrew W.Appel,with Jens Palsberg这本书是3本书中最薄的一本，也是最最牛的一本！ （完）]]></content>
    </entry>

    
  
  
</search>
